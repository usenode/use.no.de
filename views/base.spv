<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html;charset=utf-8">
        <title><% this.pageTitle() %></title>
        
        <script type="text/javascript" src="/thirdparty/prettify/prettify.js"></script>
        <script type="text/javascript" src="/thirdparty/jquery-1.5.1.min.js"></script>
        <script type="text/javascript" src="/site.js"></script>
        
        : if (this.stylesheetPath) {
		    <link rel="stylesheet" type="text/css" href="<%= this.stylesheetPath %>" />
        : }

        <link rel="stylesheet" type="text/css" href="/thirdparty/prettify/prettify.css"/>
        <!--[if IE 6]>
        	: /* height works like min-height in IE6 */
        	<style>.content { height: 100%;}</style>
        <![endif]-->
        <% this.head() %>
    </head>
    <body class="<% this.bodyClass() %>">
		<% this.page() %>
    </body>
</html>

<~method navigation (cssClass, selected, items, opts) >
    : if (! opts) { opts = {}; }
    <ul<%
         if (cssClass) {
            %> class="<%= cssClass %>"<%
         }
    %>>
        : for (var i = 0, l = items.length; i < l; i++) {
            <li<%
             if (selected === items[i].id) {
                %> class="selected"<%
             }
            %>>
                <a href="<%= items[i].link %>"><%= items[i][ opts.textAttribute || 'text' ] %></a>
            </li>
        : }
    </ul>
</~method>

<~method bodyClass></~method>

<~method head></~method>
<~method pageTitle></~method>

<~method ribbon (path) >
    <div class="ribbon">
        <a href="http://github.com/<%= path %>" rel="me">Fork me on GitHub</a>
    </div>
</~method>

<~method copyright>
	<div class="copyright">
		Site developed by <a href="http://github.com/tomyan">Tom Yandell</a> &amp; <a href="http://www.twitter.com/richardhodgson">Richard Hodgson</a>.
	</div>
</~method>

<~method getSectionTitleFromPath(path)><%

    if (! path) {
        return 'UseNode';
    }

    var s = path.split("/")[1];
    if (s == 'getting-started' || s =='contact') {
        return 'UseNode';
    }
    return s.charAt(0).toUpperCase() + s.slice(1);;
%></~method>

<~method page>
    : var sectionTitle = this.getSectionTitleFromPath(this.args.pathInfo);
    : this.mainNavSelected = sectionTitle.toLowerCase();
    : var sectionUrl   = (sectionTitle != 'UseNode') ? sectionTitle.toLowerCase() : '';
	<div class="section-title">
        <a href="/<%= sectionUrl %>"><%= sectionTitle %></a>
	</div>
    
    <% this.quickLinks(sectionUrl) %>
	
	<div class="page">
    <% this.args.pathInfo %>
		<div class="page-inner">
			<div class="column">
				<%
					 if (this.subNavItems) {
					 this.navigation('navigation local-navigation', this.subNavSelected, this.subNavItems);
				 }
				%>
			</div>
			<div class="column content">
				<% next(this) %>
			</div>
		</div>
	</div>
	
	<div class="site">
	 <div class="site-logo">
		 : if (this.mainNavSelected === 'home') {
			 <h1>use.no.de</h1>
		 : }
		 : else {
			 <a href="/">use.no.de</a>
		 : }
	 </div>
	
	 <% this.globalNav() %>
	 <% this.copyright() %>
</div>
</~method>

<~method globalNav><%
		 this.navigation('global-navigation', this.mainNavSelected, [
			 /*{ id: 'home',      link: '/',          text: 'Home' },*/
			 { id: 'proton',    link: '/proton',    text: 'Proton' },
			 { id: 'micro',     link: '/micro',     text: 'Micro' },
			 { id: 'spectrum',  link: '/spectrum',  text: 'Spectrum' },
             { id: 'swipe',     link: '/swipe', text: 'Swipe' },
             { id: 'litmus',    link: '/litmus', text: 'Litmus' },
			 { id: 'contact',   link: '/contact',   text: 'Contact' }
		 ]);
%></~method>

<~method quickLinks (sectionUrl)><%
    var quickLinks = [
        { id: 'proton',    link: '/proton',    text: 'Proton' },
        { id: 'micro',     link: '/micro',     text: 'Micro' },
        { id: 'spectrum',  link: '/spectrum',  text: 'Spectrum' },
        { id: 'litmus',    link: '/litmus', text: 'Litmus' }
    ];
    
    for(var i = 0, l = quickLinks.length; i<l; i++) {
        if (quickLinks[i].id == sectionUrl) {
            quickLinks.splice(i, 1);
            break;
        }
    }
    
    this.navigation('quick-links', '', quickLinks);
%></~method>


<~init>
	this.stylesheetPath = '/style/pages.css';
</~init>