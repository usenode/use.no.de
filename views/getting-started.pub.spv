<~method pageTitle>Getting Started</~method>

<h1>Getting started</h1>

<p>
   To make it easier to build websites for <a href="">Node.js</a>, we've created a set of minimal libraries to get you going. 
</p>

<p>
    All you need to get started is access to <code>node</code> and can install packages with <a href="http://npmjs.org/">npm</a>.
</p>

<pre><code>npm -g install proton micro
</code></pre>

<p>
    Create <code>lib/webapp.js</code> and add the following code:
</p>

<pre><code>var micro = require('micro'),
    WebApp = exports.WebApp = micro.webapp(),
    get    = WebApp.get;
    
get('/', function (request, response) {
    response.ok('text/html');
    return 'hello, world';
});
</code></pre>

<p>
    Now run your app with <a href="">Proton</a>.
</p>

<pre><code>proton
</code></pre>

<p>
    That's it, visit <a href="http://localhost:8080/">http://localhost:8080/</a> in your browser.
</p>

<h2>Right, what next?</h2>

<ul>
    <li>
        See a <a>more in-depth example</a>.
    </li>
    <li>
        Do fancier <a href="/micro/routes">URL matching</a>.
    </li>
    <li>
        Create HTML templates with <a href="/spectrum/getting-started">Spectrum</a>.
    </li>
    <li>
        Start <a>writing unit tests with Litmus</a>.
    </li>
    <li>
        Have a look at <a href="/getting-started/what-does-what">everything we offer</a>.
    </li>
    
<!--
	<li>
	    Learn more about Micro's URL <a href="/micro/routing-syntax">routing syntax</a>.
	</li>
	<li>
	    Set up simple <a href="/micro/guides/static-asset-handling">static asset handling</a>.
	</li>
-->
</ul>

<~init>
 this.subNavItems = [
	 { id: 'home',      link: '/',          text: 'Home' },
	 { id: 'proton',    link: '/proton',    text: 'Proton' },
	 { id: 'micro',     link: '/micro',     text: 'Micro' },
	 { id: 'spectrum',  link: '/spectrum',  text: 'Spectrum' },
	 { id: 'contact',   link: '/contact',   text: 'Contact' }
 ];
</~init>